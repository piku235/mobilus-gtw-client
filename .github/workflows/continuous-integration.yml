name: CI

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            build_type: Release
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            build_type: Release
            c_compiler: clang
            cpp_compiler: clang++

    steps:
      - uses: actions/checkout@v4

      - name: Paths
        id: paths
        shell: bash
        run: |
          echo "build=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
          echo "certs=/etc/mosquitto/certs" >> "$GITHUB_OUTPUT"

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y libmosquitto-dev libssl-dev

      - name: Generate certs
        run: |
          sudo mkdir -p "${{ steps.paths.outputs.certs }}"
          sudo openssl req -x509 -nodes -newkey rsa:2048 -keyout "${{ steps.paths.outputs.certs }}/server.key" -out "${{ steps.paths.outputs.certs }}/server.crt" -days 1 -subj "/CN=localhost"
          sudo chmod 644 "${{ steps.paths.outputs.certs }}/server.key" "${{ steps.paths.outputs.certs }}/server.crt"

      - name: Start mosquitto
        uses: namoshek/mosquitto-github-action@v1
        with:
          version: "2.0"
          ports: "1883:1883 8883:8883"
          certificates: ${{ steps.paths.outputs.certs }}
          config: ${{ github.workspace }}/.github/mosquitto/mosquitto.conf
          password-file: ${{ github.workspace}}/.github/mosquitto/passwd

      - name: Configure CMake
        run: >
          cmake
          -B ${{ steps.paths.outputs.build }}
          -S ${{ github.workspace }}
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

      - name: Build
        run: cmake --build ${{ steps.paths.outputs.build }}

      - name: Test
        working-directory: ${{ steps.paths.outputs.build }}
        run: ctest
